description = """
 1.  Queues(큐) 에 대해 공부해보자
  큐는 자료(data element)를 보관할 수 있는 선형구조이다 -> 여기까지는 스택이랑 같음

  다른 점은 넣을때에는 한쪽 끝에서 밀어넣어야하고 (인큐(enqueue)연산)
  꺼낼때에는 반대쪽에서 뽑아 꺼내(디큐(dequeue)연산)야하는 제약이 있다.

  그래서 선입선출(FIFO- First-In First-Out)특징을 가지는 선형 자료구조이다.

  결과적으로 들어간 순서와 동일한 순서로 나오는 선형자료구조인것!

  1. 배열을 이용해서 구현가능
  2. 링크드리스트를 이용하여 구현 가능

  2. 큐의 추상적 자료구조 구현을 위한 연산을 정의해보자
  - size (): 현재 큐에 들어있는 데이터 원소의 수를 구하는 것
  - isEmpty(): 현재 큐가 비어있는지를 판단
  - enqueue(x): 데이터 원소 x를 큐에 추가
  - dequeue(): 큐의 맨 앞에 저장된 데이터 원소를 제거(또한 , 반환)
  - peek(): 큐의 맨 앞에 저장된 데이터 원소를 반환(제거하지는 않음)

  push, pop을 각각 en, dequeue에 대응하면 거의 똑같음
  LIFO, FIFO의 차이가 핵심

  기본 배열을 이용해서 큐를 만들게 되면 dequeue를 진행할때 제거된 원소 뒤로 있는 원소들을 모두 당겨줘야하기때문에 
  복잡도가 O(n)만큼 생겨버림

  그러나 이중연결리스트로 큐를 구현하게 되면 링크만 끊어주면 되기때문에 O(1)이 될 것.

"""
