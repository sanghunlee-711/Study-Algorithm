description= """
  스택의 대표적 문제인 수식의 후위표기법 문제를 알아보자
  중위표기법(infix notation) -> (A+B)*(C+D) ->연산자가 피연산자들의 사이에 위치
  후위표기법(postfix notation) -> AB+CD+* 연산자가 피연산자들의 뒤에 위치
  
  중위-> 후위표기법으로 바꾸는 방법을 스택 자료구조를 통해 어떤방식으로 만들 수 있을지 알아보자

  피연산자가 나오면 후위 스택에 그냥 넣어줌
  연산자 나오면 또 다른 스택에 넣어줌
  연산자가 나올때 스택의 제일 위에(꼭대기) 있는 것과 우선순위 비교하여 
  현재의 연산자의 우선순위가 스택내부의 연산자보다 높으면 스택에 넣고 그렇지 아니하면 스택에서 pop한 뒤
  후위스택에 넣어준다
  그리고 스택에 우선순위가 낮았던 연산자를 넣어준다.
  만약 우선순위가 동일하면 스택에 있는걸 먼저 꺼내서 사용하고 스택에 다시 넣어준다.

  괄호의 처리는

  여는괄호는 스택에 push하고 닫는괄호를 만나게 되면 여는괄호가 나올 때 까지 스택을 pop한다
  
  여는괄호의 우선순위를 가장 낮게 줘서 여는 괄호 너머까지 pop하게 되는 경우를 방지 해줘야 한다
  A*(B+C) -> ABC+*
"""


# EX)
# (A+(B-C))*D =>  ABC-+D*
# A*(B-(C+D)) => ABCD+-*
