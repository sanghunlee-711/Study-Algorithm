description = """
  우선순위 큐(Prority Queue)
  큐가 FIFO(First In First Out) 방식을 따르지 않고 원소들의 우선순위에 따라 
  큐에서 빠져나오는 방식이다.

  구현 시 Enqueue할 때 우선순위 순서를 유지하도록 하여 만드는 방식이 -> enqueue시 o(n) 모든 데이터를 다 살펴 볼 필요가 없음(이미 줄을 지어 서있기 때문) dequeue시 o(1)
  Dequeue할때 우선순위 높은것을 선택하는 방식보다 조금 더 유리하다. -> enqueue시 o(1) dequeue시 모든 데이터 다 살펴보는 시간이 필요 o(n) 
  따라서 약간의 차이로 전자가 조금 더 유리.

  1. 선형배열
  2. 연결리스트
  를 사용할 수 있음

  시간적으로 볼때는 연결리스트가 유리함
  -> enqueu할 때 줄지어서 유지하고 중간에 삽입해야하는데 선형배열인 경우 중간에 끼워넣으면,
    뒤의 것들을 하나하나 밀어줘야하는데 연결리스트인 경우 그냥 연결을 끊고 다시 연결해주면 되기 때문
  -> 메모리의 측면에서 볼때는 연결리스트가 메모리를 더 차지하기는 하는데 ,
    대부분 설계할때 시간을 메모리보다 우선순위로 보는 측면이 있기에 링크드리스트로 고고

"""
