description = """
  환형 큐(Circular Queue)
  - 큐의 활용 
  1. 자료를 생성하는 작업과 그 자료를 이용하는 작업이 
  비동기적으로(asynchronously)일어나는 경우 사용한다.
  2. 자료를 생성하는 작업이 여러곳에서 일어나는 경우 (2producer -> 1 consumer)
  3. 자료를 이용하는 작업이 여러곳에서 일어나는 경우 (1producer -> 2consumer)
  4. 자료를 생성하는 작업과 그 자료를 이용하는 작업이 양쪽 다 여러 곳에서 일어나는 경우(2producer -> 2consumer)
  5. 자료를 처리하여 새로운 자료를 생성하고, 나중에 그 자료를 또 처리해야하는 작업의 경우


  환형 큐 (Cirular Queue)
  정해진 개수의 저장공간을 빙 돌려가며 이용하는 경우가 있다(정해진 큐의 길이가 있는 문제)

  큐가 가득차면 더이상 원소를 넣을 수 없으므로 큐길이를 기억하고 있어야 함
  제일 첫번째가 front, 마지막이 rear로 포인팅 됨

  그래서 일반 que에 비해 메서드로 isFull이라는 메서드로 큐가 모두 차있는지를 확인해야 함.

  배열로 구현한 환형 큐

  1. 6개의 칸을 가지는 list가 있다고 가정
  2. A를 enque하면 rear가 첫번째를 가리키고 A를 가리킴
  3. B를 C를 D를 넣게 되면 front는 A, rear는 D가 됨
  4. r1 = Q.dequeue()를 하게 되면 r1에는 A가 할당되고 리스트에서 A는 무효한 데이터로 취급하게 됨
  5. 이제 front는 B가 됨 r2 = Q.dequeue()를 하게 되면 r2에는 B가 할당되고 리스트에서 B는 무효한 데이터로 취급하게 됨
  6. 다시 enque를 하게 되면 무효한 데이터 A위치를 덮어쓰게 되고 리스트상 인덱스는0 이되는데

  이처럼 인덱스를(위 문제와 같은 경우 0~5까지)적절하게 돌려가며 계속 사용해야한다.




"""
