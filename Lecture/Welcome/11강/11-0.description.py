description = """
  지금부터 배우는 자료구조는 어떤 특정한 문제와 유형을 풀기 위해 사용되어야 하는 자료구조이다.

  - 스택
  자료(data element)를 보관할 수 있는 (선형)  구조
  넣을 때 한쪽 끝에서 밀어 넣어야(push) 하고 꺼낼 대에는 같은쪽에서 뽑아(pop) 내야함

  후입선출(LIFO-Last In First Out)특징을 가지는 자료 구조이다.

- 스택에서 발생하는 오류
  * 비어있는 스택에서 데이터원소를 꺼내려할 때 -> Stack Underflow
  * 꽉 찬 스택에 데이터 원소를 넣으려 할 때 -> Stack Overflow

  - 스택을 추상적 자료구조로 구현하기 위해 대표적으로 2가지 방법이 있음
    -> 1. 배열을 이용해 구현하는 방법
      * python리스트와 메서드들을 이용
    -> 2. 연결리스트(linked list)를 이용하여 구현
      * 지난 강의에서 했더 양방향 링크드리스트를 이용하여 구현해보자!
        - 연산의 정의
          - size():현재 스택에 들어있는 데이터 원소의 수를 구함
          - isEmpty(): 현재 스택이 비어있는지를 판단
          - push(x): 데이터 원소x를 스택에 추가
          - pop(): 스택의 맨 위에 저장된 데이터 원소를 제거(또한 반환)
          - peek() 스택의 맨 위에 저장된 데이터 원소를 반환(제거하지 않음)
    ***
    수식의 괄호 유효성 검사를 위해 사용할 수 있게 됨
    올바른 괄호로 이루어진 수식인지 판단하기 위해 사용가능(양 쌍이 잘 닫혀있는지 등)
    
    - 설계
    *  수식을 왼쪽부터 한글자씩 읽음
    * 여는괄호인 ( , {  ,[ 를 만나면 스택에 푸시한다
    * 닫는괄호인 ), } , ] 를 만나면 
      -> 스택이 비어있는 경우 올바르지 않은 수식으로 판단
      -> 스택이 비어있지 않다면 pop을하고 쌍을 이루는 여는 괄호인지 검사한다
        이때 맞지않으면 올바르지 않은 수식이 된다! 
    * 수식을 끝까지 검사한후, 스택이 비어있어야만 올바른 수식이 되는 것!
    -와우..

    ***

"""


